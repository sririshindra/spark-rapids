<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (c) 2020, NVIDIA CORPORATION.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>ai.rapids</groupId>
        <artifactId>rapids-4-spark-parent</artifactId>
        <version>0.1-SNAPSHOT</version>
    </parent>
    <groupId>ai.rapids</groupId>
    <artifactId>rapids-4-spark</artifactId>
    <version>0.1-SNAPSHOT</version>

    <dependencies>
        <dependency>
            <groupId>ai.rapids</groupId>
            <artifactId>cudf</artifactId>
            <classifier>${cuda.version}</classifier>
        </dependency>
        <dependency>
            <groupId>com.google.flatbuffers</groupId>
            <artifactId>flatbuffers-java</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.binary.version}</artifactId>
        </dependency>
	 <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-catalyst_${scala.binary.version}</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.orc</groupId>
          <artifactId>orc-core</artifactId>
          <classifier>${orc.classifier}</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.orc</groupId>
          <artifactId>orc-mapreduce</artifactId>
          <classifier>${orc.classifier}</classifier>
        </dependency>
        <dependency>
          <groupId>org.apache.hive</groupId>
          <artifactId>hive-storage-api</artifactId>
        </dependency>
        <dependency>
          <groupId>com.google.protobuf</groupId>
          <artifactId>protobuf-java</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binary.version}</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.junit.jupiter</groupId>
          <artifactId>junit-jupiter-api</artifactId>
          <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
          <resource>
            <!-- Include the properties file to provide the build information. -->
            <directory>${project.build.directory}/extra-resources</directory>
            <filtering>true</filtering>
          </resource>
          <resource>
            <directory>${project.basedir}/..</directory>
            <targetPath>META-INF</targetPath>
            <includes>
              <!-- The NOTICE will be taken care of by the antrun task below -->
              <include>LICENSE</include>
            </includes>
          </resource>
        </resources>
        <plugins>
            <plugin>
              <artifactId>maven-antrun-plugin</artifactId>
              <executions>
                <execution>
                  <id>copy-notice</id>
                  <goals>
                    <goal>run</goal>
                  </goals>
                  <phase>process-resources</phase>
                  <configuration>
                    <target>
                      <!-- copy NOTICE-binary to NOTICE -->
                      <copy
                          todir="${project.build.directory}/classes/META-INF/"
                          verbose="true">
                        <fileset dir="${project.basedir}/..">
                          <include name="NOTICE-binary"/>
                        </fileset>
                        <mapper type="glob" from="*-binary" to="*"/>
                      </copy>
                    </target>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-shade-plugin</artifactId>
              <configuration>
                <shadedArtifactAttached>false</shadedArtifactAttached>
                <createDependencyReducedPom>true</createDependencyReducedPom>
                <artifactSet>
                  <includes>
                    <include>com.google.flatbuffers:flatbuffers-java</include>
                    <include>org.apache.orc:orc-core</include>
                    <include>org.apache.orc:orc-mapreduce</include>
                    <include>org.apache.orc:orc-shims</include>
                    <include>org.apache.hive:hive-storage-api</include>
                    <include>com.google.protobuf:protobuf-java</include>
                  </includes>
                </artifactSet>
                <relocations>
                  <relocation>
                    <pattern>com.google.flatbuffers</pattern>
                    <shadedPattern>${rapids.shade.package}.flatbuffers</shadedPattern>
                  </relocation>
                  <relocation>
                    <pattern>org.apache.orc</pattern>
                    <shadedPattern>${rapids.shade.package}.orc</shadedPattern>
                  </relocation>
                  <relocation>
                    <pattern>org.apache.hadoop.hive</pattern>
                    <shadedPattern>${rapids.shade.package}.hadoop.hive</shadedPattern>
                  </relocation>
                  <relocation>
                    <pattern>org.apache.hive</pattern>
                    <shadedPattern>${rapids.shade.package}.hive</shadedPattern>
                  </relocation>
                  <relocation>
                    <pattern>com.google.protobuf</pattern>
                    <shadedPattern>${rapids.shade.package}.protobuf25</shadedPattern>
                  </relocation>
                </relocations>
              </configuration>
              <executions>
                <execution>
                  <phase>package</phase>
                  <goals>
                    <goal>shade</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.scoverage</groupId>
                <artifactId>scoverage-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
