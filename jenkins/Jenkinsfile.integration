
/**
*
* Jenkins file for running spark3.0 integration tests
*
*/

pipeline {
    agent none

    options {
        ansiColor('xterm')
        timestamps()
        timeout(time: 240, unit: 'MINUTES')
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }

    parameters {
        string(name: 'CUDF_VER', defaultValue: '0.10-SNAPSHOT',
            description: '-Dcudf.version=0.10-SNAPSHOT\n\n Default for cudf version')
        booleanParam(name: 'BUILD_CENTOS7', defaultValue: false,
            description: 'Whether enable centos7 build or not')
    }

    environment {
        JENKINS_ROOT  = 'jenkins'
        TEST_SCRIPT = '$JENKINS_ROOT/spark-tests.sh'
    }

    stages {
        stage ('build and test') {
            parallel {
                stage('ubuntu16 cuda10.0') {
                    agent {
                        dockerfile {
                            label 'docker-gpu'
                            filename 'Dockerfile.integration.ubuntu16'
                            dir "$JENKINS_ROOT"
                            args '--runtime=nvidia -v ${HOME}/.zinc:${HOME}/.zinc:rw \
                                -v /etc/passwd:/etc/passwd -v /etc/group:/etc/group'
                            additionalBuildArgs  '--build-arg CUDA_VER=10.0 -t spark3.0-ubuntu16-cuda10'
                        }
                    }
                    steps {
                        script {
                            echo 'Buiding rapids-plugin'
                            sh "mvn clean package -Dmaven.repo.local=$WORKSPACE/.m2 -DskipTests"
                            echo "Running integration tests on ubuntu16 cuda10.0"
                            sh "bash $TEST_SCRIPT $CUDF_VER cuda10"
                        }
                    }
                }

                stage('ubuntu16 cuda9.2') {
                    agent {
                        dockerfile {
                            label 'docker-gpu'
                            filename 'Dockerfile.integration.ubuntu16'
                            dir "$JENKINS_ROOT"
                            args '--runtime=nvidia -v ${HOME}/.zinc:${HOME}/.zinc:rw \
                                -v /etc/passwd:/etc/passwd -v /etc/group:/etc/group'
                            additionalBuildArgs  '--build-arg CUDA_VER=9.2 -t spark3.0-ubuntu16-cuda9.2'
                        }
                    }
                    steps {
                        script {
                            echo 'Buiding rapids-plugin'
                            sh "mvn clean package -Dmaven.repo.local=$WORKSPACE/.m2 -DskipTests"
                            echo "Running integration tests on ubuntu16 cuda9.2"
                            sh "bash $TEST_SCRIPT $CUDF_VER"
                        }
                    }
                }

                stage('centos7 cuda10.0') {
                    when {
                        beforeAgent true
                        environment name: 'BUILD_CENTOS7', value: 'true'
                   }
                    agent {
                        dockerfile {
                            label 'docker-gpu'
                            filename 'Dockerfile.integration.centos7'
                            dir "$JENKINS_ROOT"
                            args '--runtime=nvidia -v ${HOME}/.zinc:${HOME}/.zinc:rw \
                                -v /etc/passwd:/etc/passwd -v /etc/group:/etc/group'
                            additionalBuildArgs  '--build-arg CUDA_VER=10.0 -t spark3.0-centos7-cuda10'
                        }
                    }
                    steps {
                        script {
                            echo 'Buiding rapids-plugin'
                            sh "mvn clean package -Dmaven.repo.local=$WORKSPACE/.m2 -DskipTests"
                            echo "Running integration tests on centos7 cuda10.0"
                            sh "bash $TEST_SCRIPT $CUDF_VER cuda10"
                        }
                    }
                }
                stage('centos7 cuda9.2') {
                    when {
                        beforeAgent true
                        environment name: 'BUILD_CENTOS7', value: 'true'
                    }
                    agent {
                        dockerfile {
                            label 'docker-gpu'
                            filename 'Dockerfile.integration.centos7'
                            dir "$JENKINS_ROOT"
                            args '--runtime=nvidia -v ${HOME}/.zinc:${HOME}/.zinc:rw \
                                -v /etc/passwd:/etc/passwd -v /etc/group:/etc/group'
                            additionalBuildArgs  '--build-arg CUDA_VER=9.2 -t spark3.0-centos7-cuda9.2'
                        }
                    }
                    steps {
                        script {
                            echo 'Buiding rapids-plugin'
                            sh "mvn clean package -Dmaven.repo.local=$WORKSPACE/.m2 -DskipTests"
                            echo "Running integration tests on centos7 cuda9.2"
                            sh "bash $TEST_SCRIPT $CUDF_VER"
                        }
                    }
                }
            }//end of parallel
        }//end of stage
    } // end of stages
    post {
        always {
            script {
                def status = "failed"
                if (currentBuild.currentResult == "SUCCESS") {
                    status = "success"
                    slack("#rapidsai-spark-cicd", "Success", color: "#33CC33")
                }
                else {
                    slack("#rapidsai-spark-cicd", "Failed", color: "#FF0000")
                }
            }
            echo 'Pipeline finished!'
        }
    }
} // end of pipeline

void slack(Map params = [:], String channel, String message) {
    Map defaultParams = [
            color: "#000000",
            baseUrl: "https://nvidia.slack.com/services/hooks/jenkins-ci/",
            tokenCredentialId: "slack_token"
    ]

    params["channel"] = channel
    params["message"] = "${BUILD_URL}\n" + message

    slackSend(defaultParams << params)
}
