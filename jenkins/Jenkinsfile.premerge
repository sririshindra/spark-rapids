#!/usr/local/env groovy
/**
*
* Jenkinsfile for rapids-plugin building ubuntu cuda10 versions
*
*/

pipeline {
    agent { label 'vanilla' }

    options {
        ansiColor('xterm')
        timeout(time: 120, unit: 'MINUTES')
        buildDiscarder(logRotator(numToKeepStr: '10'))
        gitLabConnection('GitLab Master')
    }

    parameters {
        string(name: 'REF', defaultValue: '\${gitlabBranch}', description: 'Commit to build')
    }

    environment {
        JENKINS_ROOT  = 'jenkins'
        MVN_GPUWA_MIRROR='-s jenkins/settings.xml -P mirror-apache-to-gpuwa'
        LIBCUDF_KERNEL_CACHE_PATH='/tmp'
    }

    stages {
        stage('Ubuntu16 CUDA10.0') {
            agent { label 'docker-gpu' }
            steps {
                script {
                    def IMAGE_NAME="xgbci/rapids-plugin-build:ubuntu16-cuda10.0"
                    sh "docker pull $IMAGE_NAME"
                    docker.image(IMAGE_NAME).inside("--runtime=nvidia -v ${HOME}/.m2:${HOME}/.m2:rw \
                        -v ${HOME}/.zinc:${HOME}/.zinc:rw \
                        -v /etc/passwd:/etc/passwd -v /etc/group:/etc/group") {
                        echo 'Building in ubuntu16 cuda10.0 ...'
                        sh 'mvn -U -B clean package $MVN_GPUWA_MIRROR'
                    }
                }
            }
        }
    } // end of stages

    post {
        always {
            script {
                if (currentBuild.currentResult == "SUCCESS") {
                    updateGitlabCommitStatus(name: 'Jenkins CI', state: "success")
                } else {
                    updateGitlabCommitStatus(name: 'Jenkins CI', state: "failed")
                }
            }
        }
    }
} // end of pipeline
